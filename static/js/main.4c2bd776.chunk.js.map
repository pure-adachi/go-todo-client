{"version":3,"sources":["requester.ts","requester/query/index.ts","components/atoms/Header/index.tsx","components/atoms/InputText/index.tsx","components/atoms/Button/index.tsx","components/molecules/AddTodoForm/index.tsx","requester/mutation/index.ts","components/molecules/TodoLi/index.tsx","components/molecules/TodoList/index.tsx","components/templates/Main/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["baseUrl","process","useSampleQuery","initialState","loading","data","message","useReducer","queryState","action","type","state","dispatch","useEffect","fetch","then","response","json","Header","className","InputText","props","Button","disabled","classNames","AddTodoForm","refetch","useState","inputText","setInputText","update","variables","method","body","JSON","stringify","useAddTodoMutation","submit","addTodo","Title","value","onChange","e","currentTarget","onKeyPress","key","onClick","memo","TodoLi","todo","ID","useUpdateTodoMutation","alert","updateTodoSubmit","loadingUpdate","useDeleteTodoMutation","deleteTodoSubmit","loadingDelete","isDisabledUpdate","placeholder","window","confirm","TodoList","todos","map","i","MainHook","load","useTodosQuery","App","Main","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c2bd776.chunk.js","sourcesContent":["export const baseUrl = process.env.REACT_APP_SERVER_URL;\n","import { useEffect, useReducer } from \"react\";\nimport { SampleQuery, TodosQuery } from \"../../types\";\nimport { baseUrl } from \"../../requester\";\n\nexport const useSampleQuery = () => {\n  const initialState: SampleQuery.State = {\n    loading: false,\n    data: {\n      message: null,\n    },\n  };\n\n  const reducer = (\n    queryState: SampleQuery.State,\n    action: SampleQuery.Action\n  ) => {\n    switch (action.type) {\n      case \"start\":\n        return { ...queryState, loading: true };\n      case \"completed\":\n        return { ...queryState, loading: false, data: action.data };\n      default:\n        return { ...initialState };\n    }\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const load = () => {\n    dispatch({ type: \"start\" });\n\n    fetch(`${baseUrl}/api/sample`)\n      .then((response) => response.json())\n      .then((response) => dispatch({ type: \"completed\", data: response }));\n  };\n\n  useEffect(() => {\n    load();\n\n    return () => {\n      dispatch({ type: \"init\" });\n    };\n  }, []);\n\n  return state;\n};\n\nexport const useTodosQuery = () => {\n  const initialState: TodosQuery.State = {\n    loading: false,\n    data: {\n      todos: [],\n    },\n  };\n  const reducer = (queryState: TodosQuery.State, action: TodosQuery.Action) => {\n    switch (action.type) {\n      case \"start\":\n        return { ...queryState, loading: true };\n      case \"completed\":\n        return { ...queryState, loading: false, data: action.data };\n      default:\n        return { ...initialState };\n    }\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const load = () => {\n    dispatch({ type: \"start\" });\n\n    fetch(`${baseUrl}/api/todos`)\n      .then((response) => response.json())\n      .then((data) => dispatch({ type: \"completed\", data }));\n  };\n\n  useEffect(() => {\n    load();\n\n    return () => {\n      dispatch({ type: \"init\" });\n    };\n  }, []);\n\n  return {\n    ...state,\n    refetch: load,\n  };\n};\n","import React from \"react\";\nimport { useSampleQuery } from \"../../../requester/query\";\n\nconst Header = () => {\n  const {\n    loading,\n    data: { message },\n  } = useSampleQuery();\n\n  return (\n    <header className=\"p-3 bg-red-500 text-white\">\n      <div className=\"flex items-center\">\n        <div className=\"text-3xl\">TODO APP</div>\n        <div className=\"ml-5 text-xl\">{loading ? \"Loading ...\" : message}</div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { InputHTMLAttributes } from \"react\";\n\nconst InputText = ({\n  className,\n  ...props\n}: InputHTMLAttributes<HTMLInputElement>) => {\n  return (\n    <input\n      {...props}\n      type=\"text\"\n      className={`${className} border-b-2 bg-transparent px-2`}\n    />\n  );\n};\n\nexport default InputText;\n","import React, { ButtonHTMLAttributes } from \"react\";\n\nconst Button = ({\n  className,\n  disabled,\n  ...props\n}: ButtonHTMLAttributes<HTMLButtonElement>) => {\n  const classNames = `${className} text-white px-3 py-1 rounded-sm ${\n    disabled ? \"disabled:opacity-50 disabled:cursor-not-allowed\" : \"\"\n  }`;\n\n  return <button {...props} disabled={disabled} className={classNames} />;\n};\n\nexport default Button;\n","import React, { memo, useState, ChangeEvent, KeyboardEvent } from \"react\";\nimport InputText from \"../../atoms/InputText\";\nimport Button from \"../../atoms/Button\";\nimport { useAddTodoMutation } from \"../../../requester/mutation\";\n\ninterface Props {\n  refetch: () => void;\n}\n\nconst AddTodoForm = ({ refetch }: Props) => {\n  const [inputText, setInputText] = useState<string | null>();\n  const [submit, { loading }] = useAddTodoMutation({\n    update: () => {\n      setInputText(null);\n      refetch();\n    },\n  });\n\n  const handleChangeInputText = (e: ChangeEvent<HTMLInputElement>) => {\n    setInputText(e.currentTarget.value);\n  };\n\n  const handleKeyPressInputText = (e: KeyboardEvent<HTMLInputElement>) => {\n    if (e.key !== \"Enter\") return;\n\n    addTodo();\n  };\n\n  const addTodo = () => {\n    if (!inputText) return;\n\n    submit({\n      variables: {\n        Title: inputText,\n      },\n    });\n  };\n\n  return (\n    <div className=\"flex justify-center text-lg my-5\">\n      <InputText\n        className=\"border-red-300\"\n        value={inputText || \"\"}\n        disabled={loading}\n        onChange={handleChangeInputText}\n        onKeyPress={handleKeyPressInputText}\n      />\n      <Button\n        className=\"ml-3 bg-green-400\"\n        disabled={!inputText || loading}\n        onClick={() => addTodo()}\n      >\n        Add\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(AddTodoForm);\n","import { useReducer } from \"react\";\nimport {\n  AddTodoMutation,\n  UpdateTodoMutation,\n  DeleteTodoMutation,\n} from \"../../types\";\nimport { baseUrl } from \"../../requester\";\n\nexport const useAddTodoMutation = ({\n  update,\n}: AddTodoMutation.MutationOption): [\n  AddTodoMutation.SubmitFunc,\n  AddTodoMutation.State\n] => {\n  const initialState: AddTodoMutation.State = {\n    loading: false,\n  };\n\n  const reducer = (\n    queryState: AddTodoMutation.State,\n    action: AddTodoMutation.Action\n  ) => {\n    switch (action.type) {\n      case \"start\":\n        return { ...queryState, loading: true };\n      case \"completed\":\n        return { ...queryState, loading: false, data: action.data };\n      default:\n        return { ...initialState };\n    }\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const submit: AddTodoMutation.SubmitFunc = ({\n    variables,\n  }: AddTodoMutation.SubmitOptions) => {\n    dispatch({ type: \"start\" });\n\n    fetch(`${baseUrl}/api/todos`, {\n      method: \"POST\",\n      body: JSON.stringify(variables),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (update) update({ data });\n        dispatch({ type: \"completed\", data });\n      });\n  };\n\n  return [submit, state];\n};\n\nexport const useUpdateTodoMutation = ({\n  update,\n}: UpdateTodoMutation.MutationOption): [\n  UpdateTodoMutation.SubmitFunc,\n  UpdateTodoMutation.State\n] => {\n  const initialState: UpdateTodoMutation.State = {\n    loading: false,\n  };\n\n  const reducer = (\n    queryState: UpdateTodoMutation.State,\n    action: UpdateTodoMutation.Action\n  ) => {\n    switch (action.type) {\n      case \"start\":\n        return { ...queryState, loading: true };\n      case \"completed\":\n        return { ...queryState, loading: false, data: action.data };\n      default:\n        return { ...initialState };\n    }\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const submit: UpdateTodoMutation.SubmitFunc = ({\n    variables: { ID, ...variables },\n  }: UpdateTodoMutation.SubmitOptions) => {\n    dispatch({ type: \"start\" });\n\n    fetch(`${baseUrl}/api/todos/${ID}`, {\n      method: \"PATCH\",\n      body: JSON.stringify(variables),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (update) update({ data });\n        dispatch({ type: \"completed\", data });\n      });\n  };\n\n  return [submit, state];\n};\n\nexport const useDeleteTodoMutation = ({\n  update,\n}: DeleteTodoMutation.MutationOption): [\n  DeleteTodoMutation.SubmitFunc,\n  DeleteTodoMutation.State\n] => {\n  const initialState: DeleteTodoMutation.State = {\n    loading: false,\n  };\n\n  const reducer = (\n    queryState: DeleteTodoMutation.State,\n    { type }: DeleteTodoMutation.Action\n  ) => {\n    switch (type) {\n      case \"start\":\n        return { ...queryState, loading: true };\n      case \"completed\":\n        return { ...queryState, loading: false };\n      default:\n        return { ...initialState };\n    }\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const submit: DeleteTodoMutation.SubmitFunc = ({\n    variables: { ID },\n  }: DeleteTodoMutation.SubmitOptions) => {\n    dispatch({ type: \"start\" });\n\n    fetch(`${baseUrl}/api/todos/${ID}`, {\n      method: \"DELETE\",\n    }).then(() => {\n      const data = {};\n      if (update) update({ data });\n      dispatch({ type: \"completed\" });\n    });\n  };\n\n  return [submit, state];\n};\n","import React, { useState, ChangeEvent } from \"react\";\nimport InputText from \"../../atoms/InputText\";\nimport Button from \"../../atoms/Button\";\nimport { Todo } from \"../../../types\";\nimport {\n  useUpdateTodoMutation,\n  useDeleteTodoMutation,\n} from \"../../../requester/mutation\";\n\ninterface Props {\n  todo: Todo;\n  refetch: () => void;\n}\n\nconst TodoLi = ({ todo: { ID, Title }, refetch }: Props) => {\n  const [inputText, setInputText] = useState<string | null>(Title);\n  const [updateTodoSubmit, { loading: loadingUpdate }] = useUpdateTodoMutation({\n    update: () => {\n      alert(\"The save was successful.\");\n      refetch();\n    },\n  });\n  const [deleteTodoSubmit, { loading: loadingDelete }] = useDeleteTodoMutation({\n    update: () => {\n      alert(\"It has been deleted.\");\n      refetch();\n    },\n  });\n\n  const handleChangeInputText = (e: ChangeEvent<HTMLInputElement>) => {\n    setInputText(e.currentTarget.value);\n  };\n\n  const updateTodo = () => {\n    if (!inputText) return;\n\n    updateTodoSubmit({\n      variables: {\n        ID,\n        Title: inputText,\n      },\n    });\n  };\n\n  const deleteTodo = () => {\n    if (!window.confirm(\"Do you want to delete it?\")) return;\n\n    deleteTodoSubmit({\n      variables: { ID },\n    });\n  };\n\n  const isDisabledUpdate =\n    Title === inputText || !inputText || loadingUpdate || loadingDelete;\n\n  return (\n    <li className=\"flex py-2\">\n      <InputText\n        className=\"flex-auto\"\n        placeholder={Title}\n        value={inputText || \"\"}\n        disabled={loadingUpdate || loadingDelete}\n        onChange={handleChangeInputText}\n      />\n      <Button\n        className=\"ml-5 border-2 border-blue-400 text-blue-400 hover:text-white hover:bg-blue-400\"\n        onClick={updateTodo}\n        disabled={isDisabledUpdate}\n      >\n        Save\n      </Button>\n      <Button\n        className=\"ml-2 border-2 border-red-400 text-red-400 hover:text-white hover:bg-red-400\"\n        onClick={deleteTodo}\n        disabled={loadingUpdate || loadingDelete}\n      >\n        Del\n      </Button>\n    </li>\n  );\n};\n\nexport default TodoLi;\n","import React, { memo } from \"react\";\nimport TodoLi from \"../../molecules/TodoLi\";\nimport { Todo } from \"../../../types\";\n\ninterface Props {\n  todos: Todo[];\n  refetch: () => void;\n}\n\nconst TodoList = ({ todos, refetch }: Props) => {\n  return (\n    <div className=\"flex justify-center text-lg my-5\">\n      <ol>\n        {todos.map((todo, i) => (\n          <TodoLi key={i} todo={todo} refetch={refetch} />\n        ))}\n      </ol>\n    </div>\n  );\n};\n\nexport default memo(TodoList);\n","import React from \"react\";\nimport AddTodoForm from \"../../molecules/AddTodoForm\";\nimport TodoList from \"../../molecules/TodoList\";\nimport { useTodosQuery } from \"../../../requester/query\";\n\nconst MainHook = () => {\n  const {\n    loading,\n    data: { todos },\n    refetch,\n  } = useTodosQuery();\n\n  return (\n    <div className=\"flex flex-col justify-center p-10\">\n      <AddTodoForm refetch={refetch} />\n\n      {loading ? \"Loading ...\" : <TodoList todos={todos} refetch={refetch} />}\n    </div>\n  );\n};\n\nexport default MainHook;\n","import React from \"react\";\nimport Header from \"./components/atoms/Header\";\nimport Main from \"./components/templates/Main\";\n\nfunction App() {\n  return (\n    <div className=\"flex flex-col min-h-screen h-full bg-gray-100\">\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
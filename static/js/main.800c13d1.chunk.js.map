{"version":3,"sources":["requester.ts","components/atoms/Header/index.tsx","components/atoms/InputText/index.tsx","components/atoms/Button/index.tsx","components/molecules/FormAddTodo/index.tsx","components/molecules/TodoList/index.tsx","components/templates/Main/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useRequest","path","initialState","loading","error","data","url","process","useReducer","state","type","Error","dispatch","useEffect","dispatchSafe","action","abortController","AbortController","a","fetch","response","ok","json","statusText","abort","Header","className","message","InputText","props","Button","FormAddTodo","TodoList","todos","map","Id","Title","defaultValue","Main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.800c13d1.chunk.js","sourcesContent":["import { useEffect, useReducer } from \"react\";\n\nexport const useRequest = <T>(path: string) => {\n  interface StatusType {\n    loading: boolean;\n    data: T | null;\n    error: Error | null;\n  }\n\n  interface ActionType {\n    type: \"init\" | \"start\" | \"data\" | \"error\";\n    data: T | null;\n    error: Error | null;\n  }\n\n  const initialState: StatusType = {\n    loading: false,\n    error: null,\n    data: null,\n  };\n\n  const url = `${process.env.REACT_APP_SERVER_URL}${path}`;\n\n  const reducer = (state: StatusType, { type, data, error }: ActionType) => {\n    switch (type) {\n      case \"init\":\n        return { ...initialState };\n      case \"start\":\n        return { ...state, loading: true };\n      case \"data\":\n        return { ...state, loading: false, data };\n      case \"error\":\n        return { ...state, loading: false, error };\n      default:\n        throw new Error(\"no such action type\");\n    }\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    let dispatchSafe = (action: any) => dispatch(action);\n    const abortController = new AbortController();\n\n    (async () => {\n      dispatchSafe({ type: \"start\" });\n      try {\n        const response = await fetch(url);\n        if (response.ok) {\n          dispatchSafe({ type: \"data\", data: await response.json() });\n        } else {\n          const error = new Error(`Fetch failed: ${response.statusText}`);\n          dispatchSafe({ type: \"error\", error });\n        }\n      } catch (error) {\n        dispatchSafe({ type: \"error\", error });\n      }\n    })();\n\n    return () => {\n      dispatchSafe = () => null;\n      abortController.abort();\n      dispatch({ type: \"init\", data: null, error: null });\n    };\n  }, [url]);\n\n  return state;\n};\n","import React from \"react\";\nimport { useRequest } from \"../../../requester\";\n\ninterface ResponseType {\n  message: string;\n}\n\nconst Header = () => {\n  const { loading, data } = useRequest<ResponseType>(\"/api/sample\");\n\n  return (\n    <header className=\"p-3 bg-red-500 text-white\">\n      <div className=\"flex items-center\">\n        <div className=\"text-3xl\">TODO APP</div>\n        <div className=\"ml-5 text-xl\">\n          {loading ? \"Loading ...\" : data?.message}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { InputHTMLAttributes } from \"react\";\n\nconst InputText = ({\n  className,\n  ...props\n}: InputHTMLAttributes<HTMLInputElement>) => {\n  return (\n    <input\n      {...props}\n      type=\"text\"\n      className={`${className} border-b-2 bg-transparent`}\n    />\n  );\n};\n\nexport default InputText;\n","import React, { ButtonHTMLAttributes } from \"react\";\n\nconst Button = ({\n  className,\n  ...props\n}: ButtonHTMLAttributes<HTMLButtonElement>) => {\n  return (\n    <button\n      {...props}\n      className={`${className} text-white px-3 py-1 rounded-sm`}\n    />\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport InputText from \"../../atoms/InputText\";\nimport Button from \"../../atoms/Button\";\n\nconst FormAddTodo = () => {\n  return (\n    <div className=\"flex justify-center text-lg my-5\">\n      <InputText className=\"border-red-300\" />\n      <Button className=\"ml-3 bg-green-400\">Add</Button>\n    </div>\n  );\n};\n\nexport default FormAddTodo;\n","import React from \"react\";\nimport InputText from \"../../atoms/InputText\";\nimport Button from \"../../atoms/Button\";\nimport { useRequest } from \"../../../requester\";\n\ninterface Todo {\n  Id: number;\n  Title: string;\n}\n\ninterface ResponseTodosType {\n  todos: Todo[];\n}\n\nconst TodoList = () => {\n  const { loading, data } = useRequest<ResponseTodosType>(\"/api/todos\");\n  const todos = data?.todos;\n\n  if (loading || !todos) {\n    return <></>;\n  }\n\n  return (\n    <div className=\"flex justify-center text-lg my-5\">\n      <ol>\n        {todos.map(({ Id, Title }) => (\n          <li key={Id} className=\"flex py-2\">\n            <InputText className=\"flex-auto\" defaultValue={Title} />\n            <Button className=\"ml-5 border-2 border-blue-400 text-blue-400 hover:text-white hover:bg-blue-400\">\n              Save\n            </Button>\n            <Button className=\"ml-2 border-2 border-red-400 text-red-400 hover:text-white hover:bg-red-400\">\n              Del\n            </Button>\n          </li>\n        ))}\n      </ol>\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React from \"react\";\nimport FormAddTodo from \"../../molecules/FormAddTodo\";\nimport TodoList from \"../../molecules/TodoList\";\n\nconst Main = () => {\n  return (\n    <div className=\"flex flex-col justify-center p-10\">\n      <FormAddTodo />\n      <TodoList />\n    </div>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport Header from \"./components/atoms/Header\";\nimport Main from \"./components/templates/Main\";\n\nfunction App() {\n  return (\n    <div className=\"flex flex-col min-h-screen h-full bg-gray-100\">\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}